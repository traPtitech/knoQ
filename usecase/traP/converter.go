// Code generated by gotypeconverter; DO NOT EDIT.
package traP

import (
	"github.com/gofrs/uuid"
	"github.com/traPtitech/knoQ/domain"
	v3 "github.com/traPtitech/traQ/router/v3"
)

func ConvPv3UserToPdomainUser(src *v3.User) (dst *domain.User) {
	dst = new(domain.User)
	(*dst) = Convv3UserTodomainUser((*src))
	return
}

func ConvSPv3UserGroupToSPdomainGroup(src []*v3.UserGroup) (dst []*domain.Group) {
	dst = make([]*domain.Group, len(src))
	for i := range src {
		if src[i] != nil {
			dst[i] = new(domain.Group)
			(*dst[i]) = Convv3UserGroupTodomainGroup((*src[i]))
		}
	}
	return
}

func ConvuuidUUIDTodomainUser(src uuid.UUID) (dst domain.User) {
	dst.ID = src
	return
}
func Convv3UserGroupMemberTodomainUser(src v3.UserGroupMember) (dst domain.User) {
	dst.ID = src.ID
	return
}
func Convv3UserGroupTodomainGroup(src v3.UserGroup) (dst domain.Group) {
	dst.ID = src.ID
	dst.Name = src.Name
	dst.Description = src.Description
	dst.Members = make([]domain.User, len(src.Members))
	for i := range src.Members {
		dst.Members[i] = Convv3UserGroupMemberTodomainUser(src.Members[i])
	}
	dst.Admins = make([]domain.User, len(src.Admins))
	for i := range src.Admins {
		dst.Admins[i] = ConvuuidUUIDTodomainUser(src.Admins[i])
	}
	dst.Model.CreatedAt = src.CreatedAt
	dst.Model.UpdatedAt = src.UpdatedAt
	return
}
func Convv3UserTodomainUser(src v3.User) (dst domain.User) {
	dst.ID = src.ID
	dst.Name = src.Name
	dst.DisplayName = src.DisplayName
	return
}
